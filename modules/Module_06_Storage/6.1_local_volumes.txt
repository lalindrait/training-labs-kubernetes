======================================================================
Running Pods with local mounts
======================================================================


### Create SC spec and apply
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: lv-local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer


kubectl create -f sc-local.yml


### Create PVC spec and apply

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: lv-local-claim
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: lv-local-storage
  resources:
    requests:
      storage: 10G



kubectl create -f pv-local.yml


### Create pod spec and apply

kind: Pod
apiVersion: v1
metadata:
  name: pv-nginx
  labels:
    app: nginx
spec:
  containers:
  - name: pvnginx
    image: nginx:latest
    ports:
    - containerPort: 8080
    volumeMounts:
    - name: lv-local-vol1
      mountPath: /usr/share/nginx/lv-vol1
  nodeSelector:
    disktype: local
  volumes:
  - name: lv-local-vol1
    persistentVolumeClaim:
      claimName: lv-local-claim




### Run the pod
    kubectl apply -f pv-nginx-pod-nfs_02.yml


### Verify
    kubectl exec -it pv-nginx -- /bin/bash

# From inside the pod
    df -h
    touch /mnt/testfile.txt

# Verify the file is created in the NFS server











!#/bin/bash
DIRNAME="vol1"
mkdir -p /mnt/$DIRNAME 
# chcon -Rt svirt_sandbox_file_t /mnt/$DIRNAME         #Only required if SELinux is enabled
chmod 777 /mnt/$DIRNAME






kubectl get sc
kubectl get pv
kubectl get pvc





kubectl get nodes --show-labels
kubectl label nodes worker-1 disktype=local



kubectl create -f pv-nginx-pod.yml



kubectl exec -it pod/pv-nginx -- bash

### On Pod
## Go to /usr/share/nginx/lv-vol1
cd /usr/share/nginx/lv-vol1
touch text.txt


### On worker node
## Go to worker-1 node and see if the file exist in /mnt/vol1
cd /mnt/vol1




